do {
	version-check;
	rsvp-checks;
	bgp-flap-checks;
	ospf-checks;
	ospf-int-checks;
	ospf-db-checks;
	alarm-checks;
	re0-master;
	l2vpn-list;
	vpls-list;
	bgp-checks;
	fpc-check;
}

fpc-check {
	command show chassis fpc;
	iterate fpc {
		id slot;
		no-diff state {
			info FPC CHANGE;
			err "PRE  Check: FPC: slot %s: state %s",$PRE/slot,$PRE/state;
			err "POST Check: FPC: slot %s: state %s",$POST/slot,$POST/state;
		}
	}
}


alarm-checks {
	command show chassis alarms;
	item alarm-summary {
		not-exists active-alarm-count {
			info No chassis alarms;
			err "There are %s chassis alarms", active-alarm-count;
		}
	}
	iterate alarm-detail {
		id alarm-description;
		list-not-less {
			info Alarm Gone Missing;
			err "-Alarm: %s", alarm-description;
		}
		list-not-more {
			info Alarm Got More;
			err "+Alarm: %s", alarm-description;
		}
	}
}

ospf-db-checks {
	command show ospf database detail;
	iterate //ospf-router-lsa {
		in-range link-count, 5, 10 {
			info OSPF router links [5..10];
			err "Router %s has %s links", ../advertising-router, link-count;
		}
		not-range link-count, 5, 10 {
			info OSPF router links not[5..10];
			err "Router %s has %s links", ../advertising-router, link-count;
		}
	}
}

ospf-int-checks {
	command show ospf interface;
	iterate ospf-interface {
		is-gt neighbor-count, 0 {
			info OSPF interfaces must have at least 1 neighbor;
			err "OSPF interface %s does not have any neighbors", interface-name;
		}
	}
}

rsvp-checks {
	command show rsvp session;
	iterate rsvp-session-data/rsvp-session {
		is-in lsp-state, "Up", "NotInService" {
			info RSVP LSP state is [Up | NotInService];
			err " RSVP session to %s has LSP state %s.", destination-address, lsp-state;
		}
		is-in lsp-state, "Dn", "Failed" {
			info RSVP LSP state is not[Dn | Failed];
			err " RSVP session to %s has LSP state %s.", destination-address, lsp-state;
		}
	}
}

version-check {
	command show version invoke-on all-routing-engines;
	iterate //software-information {
		id host-name;
		contains package-information[1]/comment, "9.6R" {
			info Checking Junos version for 9.6 release;
			err "Found %s on RE %s", package-information[1]/comment, ../re-name;
		}
		no-diff package-information[1]/comment {
			info Checking to see if version changed;
			err "Version was: %s", $PRE/package-information[1]/comment;
			err "Version now: %s", $POST/package-information[1]/comment;
		}
	}
}

bgp-flap-checks {
	command show bgp neighbor;
	iterate bgp-peer {
		is-lt flap-count, 5 {
			info BGP peer flap-count < 5;
			err "BGP peer %s has %s flaps", peer-address, flap-count;
		}
	}
}

ospf-checks {
	command show ospf neighbor;
	iterate ospf-neighbor {
		id interface-name;
		list-not-less {
			info OSPF interface list check;
			err "  OSPF interface gone missing: %s going to %s", interface-name, neighbor-address;
		}
		no-diff neighbor-address {
			info OSPF neighbor change check;
			err "  OSPF interface %s neighbor changed!", interface-name;
			err "  was going to %s, now going to %s", $PRE/neighbor-address, $POST/neighbor-address;
		}
		is-equal ospf-neighbor-state, "Full" {
			info All OSPF neighbors are up;
			err "  OSPF neighbor on %s to %s is not up, rather %s", interface-name, neighbor-address, ospf-neighbor-state;
		}
		all-same neighbor-priority  {
			info OSPF neighbors must have the same priority value;
			err "  OSPF interface %s has mismatch priority %s", interface-name, neighbor-priority;
		}
		no-diff ospf-neighbor-state {
			info NEI state no-change;
			err "  OSPF interface %s", interface-name;
			err "  OSPF nei-state PRE: %s", $PRE/ospf-neighbor-state;
			err "  OSPF nei-state POST: %s", $POST/ospf-neighbor-state;
		}
	}
}


bgp-checks {
	command show bgp summary;

	iterate bgp-peer {
		is-equal peer-state, "Established" {
			info All BGP Peers are 'Established';
			err "BGP peer AS: %s, NEI: %s is not Estab, rather %s", peer-as, peer-address, peer-state;
		}
	}

	iterate bgp-rib {
		id name;
		list-not-less {
			info BGP list did not loose peers;
			err "BGP RIB: '%s' went away, oh no!", name;
		}
		delta total-prefix-count, 10% {
			info BGP total prefix count should not change by more than 10%;
			err "  BGP rib: %s total prefix count has exceeded threshold", name;
			err "     pre-check: %s, post-check: %s", $PRE/total-prefix-count, $POST/total-prefix-count;
		}
		delta active-prefix-count, 10% {
			info BGP active prefix count should not change by more than 10%;
			err "  BGP rib: %s total prefix count has exceeded threshold", name;
			err "     pre-check: %s, post-check: %s", $PRE/active-prefix-count, $POST/active-prefix-count;
		}
	}
}

re0-master {
	command show chassis routing-engine;
	item route-engine[slot = '0'] {
		is-equal mastership-state, "master" {
			info RE-0 is always master;
			err "  RE-0 is not master, rather %s", mastership-state;
			err "     So you should do something about it!!";
		}
	}
}

l2vpn-list {
	command show l2vpn connections up;
	iterate instance//connection {
		id connection-id;
		id ../local-site-id;
		id ancestor::instance/instance-name;
		list-not-less {
		   info Check L2VPN connections - all back up;
			err "  L2VPN connection missing on service %s", $ID.3;
			err "    Site: %s, connection-id: %s", $ID.2, $ID.1;
			err "    Remote-PE: %s", remote-pe;
			err "    local-interface: %s", local-interface/interface-name;
		}
	}
}

vpls-list {
	command show vpls connections up;
	iterate instance//connection {
		id connection-id;
		id ../local-site-id;
		id ancestor::instance/instance-name;
		list-not-less {
		   info Check VPLS connections - all back up;
			err "  VPLS connection missing on service %s", $ID.3;
			err "    Site: %s, connection-id: %s", $ID.2, $ID.1;
			err "    Remote-PE: %s", remote-pe;
			err "    local-interface: %s", local-interface/interface-name;
		}
	}
}

